"""Define the command line interface for the nix
conf program.
"""
import argparse
import logging

from command_line_nix.cli_run import CLIRun
from command_line_nix.cli_tags import CLITags
from command_line_nix.cli_list import CLIList
from command_line_nix.cli_show import CLIShow

LOG = logging.getLogger(__name__)


class CLI(object):
    """Object which defines the command line interface for the nixconf program.
    """

    def __init__(self):
        """
        """
        LOG.debug("Create instance of {}".format(self.__class__.__name__))

        self._parser = self._make_parser()

    @staticmethod
    def _make_parser() -> argparse.ArgumentParser:
        """Set up the command line parser.
        :return: Argument parser object
        :rtype: argparse.ArgumentParser
        """
        LOG.debug("Call parser")

        _parser = argparse.ArgumentParser(description="Configure config file metadata.")

        _subparser = _parser.add_subparsers(title='subcommands')

        CLIRun(_subparser)
        CLITags(_subparser)
        CLIList(_subparser)
        CLIShow(_subparser)

        return _parser

    def print_help(self):
        """Print out the help as generated by the parser.

        In general, this will only be called when a user executes the
        installer without
        providing any parameters.
        """
        self._parser.print_help()

    def start_parser(self):
        """Start the argument parser and process any command line
        parameters present.
        """
        args = self._parser.parse_args()

        args.func(args)
